%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% BUILD NANOPARTICLE SUPERLATTICE FROM INDIVIDUAL NANOPARITLCES %%%%%%
%%% SUPERLATTICE ORIENTs ALONG [110] DIRECTION
%%% Written by Wenbin Li, MIT, Nov. 2013
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% The program reads the relaxed coordinates of a single gold-alkanethiol
%%% nanopartile. These coordinates are written in the file "SingleNP.cfg"
%%% "SingleNP.cfg" can be obtained by running LAMMPS simulation of
%%% alkanethiol self-assembly on gold nanocrystal surface.
%%% The input files needed for such simulation can be generated by running
%%% the MATLAB code in the directory "SingleNanoParticle"

%%% The program outputs a CFG configuration files of gold nanopartilce superlattice,
%%% whose file name will be "gold_np_thiol.cfg". The CFG configuration file
%%% can be visualized by Ju Li's Atomeye program. Atomeye is a free, fast software
%%% for visualization of atomic configurations. Atomeye can be downloaded from
%%% http://li.mit.edu/Archive/Graphics/A/

%%% The program also outputs a LAMMPS data file 'data.fusion',
%%% which serves as initial conditions for molecular dynamics simulation
%%% package LAMMPS (http://lammps.sandia.gov/)

%%% Input CFG configuration file name
inputfile = 'SingleNP.cfg';
%%% total number of Au atoms per nanoparticle
natom_Au  = 561;
%%% total number of Sulfur atoms per nanoparticle
natom_S   = 136;
%%% total number of CH2 per nanoparticle
natom_C1  = 952;
%%% total nubmer of CH3 per nanoparticle
natom_C2  = 136;

%%%  number of gold atoms per nanoparticle, same as natom_Au
n_gold  = natom_Au;
%%%  number of thiol molecules contained in 'SingleNP.cfg'
n_thiol = 136;
%%%  number of atoms per thiol in united atom model.
%%%  for octanethiol SC8H17, it will be coarse-grained as SC8
%%%  so total number of atoms per thiol will be 9
natom_thiol = 9; 

%%%  open the file 'SingleNP.cfg'
fid = fopen(inputfile, 'r');

%%%  read data
natom = fscanf(fid, '%*s %*s %*s %*s %g\n',1);
line1 = fgets(fid);
%%%  supercell matrix
H0    = fscanf(fid, '%*s %*s %g %*s\n', [3 3])';
fgets(fid);
line2 = fgets(fid); fgets(fid); fgets(fid); fgets(fid);

%%%  Mass and Symbol of Au
Au_mass   = fscanf(fid, '%g\n');
Au_symbol = fgets(fid);

%%%  Coordinates of Au
Pos_gold = fscanf(fid, '%g %g %g %d %d\n', [5, natom_Au])';

%%%  Mass and symbol of Sulfur
S_mass   = fgets(fid);
S_symbol = fgets(fid);

%%%  Coordinates of Sulfur atoms
Pos_S = fscanf(fid, '%g %g %g %d %d\n', [5, natom_S])';

%%%  Mass and symbol of CH2
C1_mass   = fgets(fid);
C1_symbol = fgets(fid);

%%%  Coordinates of CH2
Pos_C1 = fscanf(fid, '%g %g %g %d %d\n', [5, natom_C1])';

%%%  Mass and symbol of CH3
C2_mass   = fgets(fid);
C2_symbol = fgets(fid);

%%%  Coordinates of CH3
Pos_C2 = fscanf(fid, '%g %g %g %d %d\n', [5, natom_C2])';

%%%  Close file
fclose(fid);

%%%  only keep the coordinate data
Pos_gold   = Pos_gold(:,1:3);

%%%  Coordinates of center atom of gold
ref_center = Pos_gold(1,:);

%%%  Shift coordinates of central gold atom to origin
for i = 1:n_gold
  Pos_gold(i,:) = Pos_gold(i,:) - ref_center;
end

%%%  Position coordinates of thiol molecules
Pos_chain = zeros(natom_thiol,3,n_thiol);

for i = 1:n_thiol
  Pos_chain(1,:,i) = Pos_S(i,1:3);
  Pos_chain(2:natom_thiol-1, :, i) = Pos_C1( (natom_thiol-2)*(i-1)+1:(natom_thiol-2)*i, 1:3);
  Pos_chain(natom_thiol, :, i)     = Pos_C2( i, 1:3);
  
  %%% Shift the coordinates of thiols
  for j = 1:natom_thiol
    Pos_chain(j,:,i) = Pos_chain(j,:,i)-ref_center;
  end
end

%%%  Convert to absolute coordinates
Pos_gold = Pos_gold*H0;

for k = 1:n_thiol
  Pos_chain(:,:,k)=Pos_chain(:,:,k)*H0;
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Determine the Center of Mass Coordiantes of the Nanoparticles in
%%% [111] oriented Nanoparticle Superlattice
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% "primitive cell" dimension: a times (sqrt(3)*a) times (sqrt(6)*a)
%%% where a = np_distance is the original distance between two
%%% nanoparticles

%%% distance between two nearest neighbor nanoparticles at the beginning
np_distance = 60;

%%% How many periods along X, Y, and Z dimensions
xperiod = 4; yperiod = 2; zperiod = 2;

%%% each "primitive cell" contains 8 nanoparticles
np_total = xperiod*yperiod*zperiod*6;

%%% "primitive cell" dimensions
lx = np_distance; ly = sqrt(3)*np_distance; lz = sqrt(6)*np_distance;

%%% superbox dimensions
H11 = xperiod*lx; H22 = yperiod*ly; H33 = zperiod*lz;

H = diag([H11 H22 H33]);

%%% Center of Mass coordinates of the nanoparticles
Nanoxtal_Center = zeros(np_total, 3);

NP2Now = 0;

for i = 0:xperiod-1
  for j = 0:yperiod-1
    for k = 0:zperiod-1
      
      Nanoxtal_Center(NP2Now+1 , :) = [0 0 0]              + [lx 0 0]*i + [0 ly 0]*j + [0 0 lz]*k;
      Nanoxtal_Center(NP2Now+2 , :) = [lx/2 ly/2 0]        + [lx 0 0]*i + [0 ly 0]*j + [0 0 lz]*k;
      Nanoxtal_Center(NP2Now+3 , :) = [lx/2 ly/6 lz/3]     + [lx 0 0]*i + [0 ly 0]*j + [0 0 lz]*k;
      Nanoxtal_Center(NP2Now+4 , :) = [lx 2*ly/3 lz/3]     + [lx 0 0]*i + [0 ly 0]*j + [0 0 lz]*k;
      Nanoxtal_Center(NP2Now+5 , :) = [0 ly/3 2*lz/3]      + [lx 0 0]*i + [0 ly 0]*j + [0 0 lz]*k;
      Nanoxtal_Center(NP2Now+6 , :) = [lx/2 5*ly/6 2*lz/3] + [lx 0 0]*i + [0 ly 0]*j + [0 0 lz]*k;
      
      NP2Now = NP2Now + 6;
      
    end
  end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% COORDINATES DETERMINATION ENDS HERE, NEXT OUTPUT CFG COORDINATE FILE

atom_name_Au='Au';
atom_mass_Au = 196.966550;

atom_name_S='S';
atom_mass_S = 32.065;

atom_name_C='C';
atom_mass_C = 12.001;

natom_total = (n_gold + natom_thiol*n_thiol)*np_total;

cfg_name = 'gold_np_thiol.cfg';
cfg = fopen(cfg_name, 'w');
 
fprintf(cfg, 'Number of particles = %d\n', natom_total);
fprintf(cfg, 'H0(1,1)= %.5g A\n', H(1,1));
fprintf(cfg, 'H0(1,2)= %.5g A\n', H(1,2));
fprintf(cfg, 'H0(1,3)= %.5g A\n', H(1,3));
fprintf(cfg, 'H0(2,1)= %.5g A\n', H(2,1));
fprintf(cfg, 'H0(2,2)= %.5g A\n', H(2,2));
fprintf(cfg, 'H0(2,3)= %.5g A\n', H(2,3));
fprintf(cfg, 'H0(3,1)= %.5g A\n', H(3,1));
fprintf(cfg, 'H0(3,2)= %.5g A\n', H(3,2));
fprintf(cfg, 'H0(3,3)= %.5g A\n', H(3,3));
fprintf(cfg, '.NO_VELOCITY.\n');
fprintf(cfg, 'entry_count = 3\n');

%%%  Print Gold atomic coordinates

fprintf(cfg, '%g\n', atom_mass_Au);
fprintf(cfg, '%2s\n', atom_name_Au);

for N = 1:np_total
  for i=1: n_gold
    fprintf(cfg, '%.5g %.5g %.5g\n', (Pos_gold(i,1)+Nanoxtal_Center(N,1))/H(1,1), ...
            (Pos_gold(i,2)+Nanoxtal_Center(N,2))/H(2,2), (Pos_gold(i,3)+Nanoxtal_Center(N,3))/H(3,3));
  end
end

%%%  Print Sulfur atomic coordinates

fprintf(cfg, '%g\n', atom_mass_S);
fprintf(cfg, '%2s\n', atom_name_S);

for N = 1:np_total
  for k = 1:n_thiol
    fprintf(cfg, '%.5g %.5g %.5g\n', (Pos_chain(1,1,k)+Nanoxtal_Center(N,1))/H(1,1), ...
            (Pos_chain(1,2,k)+Nanoxtal_Center(N,2))/H(2,2), (Pos_chain(1,3,k)+Nanoxtal_Center(N,3))/H(3,3));
  end
end

%%% Print Carbon atomic coordinates
 
fprintf(cfg, '%g\n', atom_mass_C);
fprintf(cfg, '%2s\n', atom_name_C);

for N = 1:np_total
  for k = 1:n_thiol
    for i = 2:natom_thiol
      fprintf(cfg, '%.5g %.5g %.5g\n', (Pos_chain(i,1,k)+Nanoxtal_Center(N,1))/H(1,1), ...
          (Pos_chain(i,2,k)+Nanoxtal_Center(N,2))/H(2,2), (Pos_chain(i,3,k)+Nanoxtal_Center(N,3))/H(3,3));
      end
  end
end
  
fclose(cfg);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% NEXT OUTPUT DATA FILE 'DATA.FUSION' %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%  total atoms per nanoparticle
total_atoms_per_np     = n_gold + natom_thiol*n_thiol;

%%%  total molecules per nanoparticle
total_molecules_per_np = 1 + n_thiol;

%%%  total bonds per thiol
n_bonds_per_thiol      = natom_thiol-1;
%%%  total bonds per nanoparticle
total_bonds_per_np     = n_bonds_per_thiol*n_thiol;

%%%  total angles per thiol
n_angles_per_thiol     = natom_thiol-2;
%%%  total angles per nanoparticle
total_angles_per_np    = n_angles_per_thiol*n_thiol;

%%%  total dihedral per thiol
n_dihedrals_per_thiol  = natom_thiol-3;
%%%  total dihedrals per nanoparticle
total_dihedrals_per_np = n_dihedrals_per_thiol*n_thiol;

%%%  atoms types:
%%%  Au-1
%%%  S-2
%%%  C-3, from coarse graining of CH2
%%%  C-4, from coarse graining of CH3
atom_types = 4;

%%%  bond type
%%%  1  S-C
%%%  2  C-C between CH2 and CH2
%%%  3  C-C between CH2 and CH3
bond_types = 3;

%%%  angle types
%%%  1  S-CH2-CH2
%%%  2  CH2-CH2-CH2
%%%  3  CH2-CH2-CH3
angle_types = 3;

%%%  dihedral types
%%%  1 S-CH2-CH2-CH2
%%%  2 CH2-CH2-CH2-CH2
%%%  3 CH2-CH2-CH2-CH3
dihedral_types = 3;


atom_mass_Au  = 196.9666;
atom_mass_S   =  32.065;
atom_mass_CH2 = 14.0026;
atom_mass_CH3 = 15.0345;

%%%  lammps output file name
file_name = 'data.fusion';

fp = fopen(file_name, 'w');

fprintf(fp, 'Gold Nanoparticle - Thiol System\n');
fprintf(fp, '\n');
fprintf(fp, '        %d   atoms\n',     total_atoms_per_np*np_total);
fprintf(fp, '        %d   bonds\n',     total_bonds_per_np*np_total);
fprintf(fp, '        %d   angles\n',    total_angles_per_np*np_total);
fprintf(fp, '        %d   dihedrals\n', total_dihedrals_per_np*np_total);
fprintf(fp, '\n');
fprintf(fp, '        %d   atom types\n',     atom_types);
fprintf(fp, '        %d   bond types\n',     bond_types);
fprintf(fp, '        %d   angle types\n',    angle_types);
fprintf(fp, '        %d   dihedral types\n', dihedral_types);

fprintf(fp, '\n');
fprintf(fp, '  0.00  %.5g        xlo xhi\n', H(1,1));
fprintf(fp, '  0.00  %.5g        ylo yhi\n', H(2,2));
fprintf(fp, '  0.00  %.5g        zlo zhi\n', H(3,3));

fprintf(fp, '\n');
fprintf(fp, 'Masses\n');
fprintf(fp, '\n');

fprintf(fp, ' 1 %g\n', atom_mass_Au);
fprintf(fp, ' 2 %g\n', atom_mass_S);
fprintf(fp, ' 3 %g\n', atom_mass_CH2);
fprintf(fp, ' 4 %g\n', atom_mass_CH3);

%%%%%%%%%%%%%%%%%%%%%
%%%  PRINT ATOMS  %%%
%%%%%%%%%%%%%%%%%%%%%
 
fprintf(fp, '\n');
fprintf(fp, 'Atoms\n');
fprintf(fp, '\n');

%%% PRINT FORMAT: ATOM_ID MOLECULE_ID ATOM_TYPE POSITION_X POSITON_Y POSITION_Z

for N = 1:np_total  
  
  %%% print coordinates of gold atoms
  for i = 1: n_gold
    fprintf(fp, '   %d    %d   1   %.5g  %.5g  %.5g\n', i + total_atoms_per_np*(N-1), ...
            1 + total_molecules_per_np*(N-1), ...
            Pos_gold(i,1) + Nanoxtal_Center(N,1), ...
            Pos_gold(i,2) + Nanoxtal_Center(N,2), ...
            Pos_gold(i,3) + Nanoxtal_Center(N,3));
  end
  
  %%% print coordinates of thiol atoms
  for k = 1:n_thiol
    
    %%% print sulfur atoms
    fprintf(fp, '   %d     %d   2  %.5g  %.5g  %.5g\n', n_gold+(k-1)*natom_thiol+1 + total_atoms_per_np*(N-1), ...
            1+k+total_molecules_per_np*(N-1), ...
            Pos_chain(1,1,k) + Nanoxtal_Center(N,1), ...
            Pos_chain(1,2,k) + Nanoxtal_Center(N,2), ...
            Pos_chain(1,3,k) + Nanoxtal_Center(N,3));
    
    %%% print CH2
    for i=2:(natom_thiol-1)
      fprintf(fp, '   %d     %d   3  %.5g  %.5g  %.5g\n', n_gold+(k-1)*natom_thiol+i + total_atoms_per_np*(N-1), ...
              1+k+total_molecules_per_np*(N-1), ...
              Pos_chain(i,1,k) + Nanoxtal_Center(N,1), ...
              Pos_chain(i,2,k) + Nanoxtal_Center(N,2), ...
              Pos_chain(i,3,k) + Nanoxtal_Center(N,3));
    end
    
    %%% print CH3
    fprintf(fp, '   %d     %d   4  %.5g  %.5g  %.5g\n', n_gold+ k*natom_thiol + total_atoms_per_np*(N-1), ...
            1+k+total_molecules_per_np*(N-1), ...
            Pos_chain(natom_thiol,1,k) + Nanoxtal_Center(N,1), ...
            Pos_chain(natom_thiol,2,k) + Nanoxtal_Center(N,2), ...
            Pos_chain(natom_thiol,3,k) + Nanoxtal_Center(N,3));
  end
end


%%%%%%%%%%%%%%%%%%%%%
%%%  PRINT BONDS  %%%
%%%%%%%%%%%%%%%%%%%%%

fprintf(fp, '\n');
fprintf(fp, 'Bonds\n');
fprintf(fp, '\n');

%%% PRINT FORMAT: BOND_NUMBER BOND_TYPE ATOM_ID1 ATOM_ID2

for N = 1:np_total
  
  for k = 1: n_thiol
    
    %%% print S-C bonds
    fprintf(fp, '     %d   1     %d     %d\n', total_bonds_per_np*(N-1) + (k-1)*n_bonds_per_thiol + 1, ...
            total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol+1, ...
            total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol+2);
    
    %%% print CH2-CH2 bonds
    for i = 2:(natom_thiol-2)
      fprintf(fp, '     %d   2     %d     %d\n', total_bonds_per_np*(N-1) + (k-1)*n_bonds_per_thiol+i, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol+i , ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol+i+1 );
    end
    
    %%% print CH2-CH3 bonds
    fprintf(fp, '     %d   3     %d     %d\n', total_bonds_per_np*(N-1) + k*n_bonds_per_thiol, ...
            total_atoms_per_np*(N-1) + n_gold + k*natom_thiol-1, ...
            total_atoms_per_np*(N-1) + n_gold + k*natom_thiol);
  end
end

%%%%%%%%%%%%%%%%%%%%%%
%%%  Print Angles  %%%
%%%%%%%%%%%%%%%%%%%%%%

fprintf(fp, '\n');
fprintf(fp, 'Angles\n');
fprintf(fp, '\n');

%%% PRINT FORMAT: ANGLE_NUMBER ANGLE_TYPE ATOM_ID1 ATOM_ID2 ATOM_ID3

for N = 1:np_total
  
  for k = 1: n_thiol
    
    % S-CH2-CH2
    fprintf(fp, '     %d   1     %d     %d     %d\n', total_angles_per_np*(N-1) + (k-1)*n_angles_per_thiol+1, ...
            total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + 1, ...
            total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + 2, ...
            total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + 3);
    
    % CH2-CH2-CH2
    for i = 2:(natom_thiol-3)
      fprintf(fp, '     %d   2     %d     %d     %d\n', total_angles_per_np*(N-1) + (k-1)*n_angles_per_thiol + i, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i,...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i + 1, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i + 2);
    end
    
    % CH2-CH2-CH3
    fprintf(fp, '     %d   3     %d     %d     %d\n', total_angles_per_np*(N-1) + k*n_angles_per_thiol, ...
            total_atoms_per_np*(N-1) + n_gold + k*natom_thiol - 2, ...
            total_atoms_per_np*(N-1) + n_gold + k*natom_thiol - 1, ...
            total_atoms_per_np*(N-1) + n_gold + k*natom_thiol);
  end
end


%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%   PRINT DIHEDRALS  %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%

fprintf(fp, '\n');
fprintf(fp, 'Dihedrals\n');
fprintf(fp, '\n');

%%% PRINT FORMAT: DIHEDRAL_N_GOLD DIHEDRAL_TYPE ATOM_ID1 ATOM_ID2 ATOM_ID3

for N = 1:np_total
  
  for k = 1: n_thiol
    
    % S-CH2-CH2-CH2
    fprintf(fp, '     %d   1     %d     %d     %d     %d\n', total_dihedrals_per_np*(N-1) + (k-1)*n_dihedrals_per_thiol + 1, ...
            total_atoms_per_np*(N-1) + n_gold + (k-1)*natom_thiol + 1, ...
            total_atoms_per_np*(N-1) + n_gold + (k-1)*natom_thiol + 2, ...
            total_atoms_per_np*(N-1) + n_gold + (k-1)*natom_thiol + 3, ...
            total_atoms_per_np*(N-1) + n_gold + (k-1)*natom_thiol + 4);
    
    % CH2-CH2-CH2-CH2
    for i = 2:(natom_thiol-4)
      fprintf(fp, '     %d   2     %d     %d     %d     %d\n', total_dihedrals_per_np*(N-1) + (k-1)*n_dihedrals_per_thiol + i, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i + 1, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i + 2, ...
              total_atoms_per_np*(N-1) + n_gold+(k-1)*natom_thiol + i + 3);
    end
    
    % CH2-CH2-CH2-CH3
    fprintf(fp, '     %d   3     %d     %d     %d     %d\n', total_dihedrals_per_np*(N-1) + k*n_dihedrals_per_thiol, ...
            total_atoms_per_np*(N-1) + n_gold+k*natom_thiol-3, ...
            total_atoms_per_np*(N-1) + n_gold+k*natom_thiol-2, ...
            total_atoms_per_np*(N-1) + n_gold+k*natom_thiol-1, ...
            total_atoms_per_np*(N-1) + n_gold+k*natom_thiol);
  end
end

fclose(fp);
